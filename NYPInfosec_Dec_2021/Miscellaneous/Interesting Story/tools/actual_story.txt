Physical entry: slipping into a building of your target company. It’s something I never like to do. Way too risky. Just writing about it makes me practically break out in a cold sweat. But there I was, lurking in the dark parking lot of a billion-dollar company on a warm evening in spring, watching for my opportunity. A week earlier I had paid a visit to this building in broad daylight, on the pretext of dropping off a letter to an employee. The real reason was so I could get a good look at their ID cards. This company put the employee’s head shot upper left, name just below that, last name first, in block letters. The name
of the company was at the bottom of the card, in red, also in block letters. I had gone to Kinko’s and looked up the company’s website, so I could download and copy an image of the company logo. With that and a
scanned copy of my own photo, it took me about twenty minutes working in Photoshop to make up and print out a reasonable facsimile of a company ID card, which I sealed into a dime-store plastic holder. I crafted another phony ID for a friend who had agreed to go along with me in case I needed him. Here’s a news flash: it doesn’t even have to be all that authentic looking. Ninety-nine percent of the time, it won’t get more than a glance. As long as the essential elements are in the right place and look more or less the way they are supposed to, you can get by with it... unless, of course, some overzealous guard or an employee who likes to play the role of security watchdog insists on taking a close look. It’s a danger you run when you live a life like mine. In the parking lot, I stay out of sight, watching the glow of cigarettes from the stream of people stepping out for a smoke break. Finally I spot a little pack of five or six people starting back into the building together. The rear entrance door is one of those that unlock when an employee holds his or her access card up to the card reader. As the group single-files through the door, I fall in at the back of the line. The guy ahead of me reaches the door, notices there’s someone behind him, takes a quick glance to make sure I’m wearing a company badge, and holds the door open for me. I nod a thanks. This technique is called “tailgating.” Inside, the first thing that catches my eye is a sign posted so you see it immediately as you walk in the door. It’s a security poster, warning not to hold the door for any other person but to require that each person gain entrance by holding up his card to the reader. But common courtesy, everyday politeness to a “fellow employee,” means that the warning on the security poster is routinely ignored. Inside the building, I begin walking corridors with the stride of someone en route to an important task. In fact I’m on a voyage of exploration, looking for the offices of the Information Technology (IT) Department, which after about ten minutes I find in an area on the western side of the building. I’ve done my homework in advance and have the name of one of the company’s network engineers; I figure he’s likely to have full administrator rights to the company’s network. Damn! When I find his workspace, it’s not an easily accessible cubicle but a separate office... behind a locked door. But I see a solution. The ceiling is made up of those white soundproofing squares, the kind often used to create a dropped ceiling with a crawl space above for piping, electrical lines, air vents, and so on. I cell-phone to my buddy that I need him, and make my way back to the rear entrance to let him in. Lanky and thin, he will, I hope, be able to do what I can’t. Back in IT, he clambers onto a desk. I grab him around the legs and boost him up high enough that he’s able to raise one of the tiles and slide it out of the way. As I strain to raise him higher, he manages to get a grip on a pipe and pull himself up. Within a minute, I hear him drop down inside the locked office. The doorknob turns and he stands there, covered in dust but grinning brightly. I enter and quietly close the door. We’re safer now, much less likely to be noticed. The office is dark. Turning on a light would be dangerous but it isn’t necessary—the glow from the engineer’s computer is enough for me to see everything I need, reducing the risk. I take a quick scan of his desk and check the top drawer and under the keyboard to see if he has left himself a note with his computer password. No luck. But not a problem. From my fanny pack, I pull out a CD with a bootable version of the Linux operating system that contains a hacker toolkit and pop it into his CD drive, then restart the computer. One of the tools allows me to change the local administrator’s password on his computer; I change it to something I know, so I can log in. I then remove my CD and again restart the computer, this time logging in to the local administrator account. Working as fast as I can, I install a “remote access Trojan,” a type of malicious software that gives me full access to the system, so I can log keystrokes, grab password hashes, and even instruct the webcam to take pictures of the person using the computer. The particular Trojan I’ve installed will initiate an Internet connection to another system under my control every few minutes, enabling me to gain full control of the victim’s system. Almost finished, as a last step I go into the registry of his computer and set “last logged-in user” to the engineer’s username so there won’t be any evidence of my entry into the local administrator account. In the morning, the engineer may notice that he’s logged out. No problem: as soon as he logs back in, everything will look just as it should. I’m ready to leave. By now my buddy has replaced the overhead tiles. On the way out, I reset the lock. The next morning, the engineer turns on his computer at about 8:30 a.m., and it establishes a connection to my laptop. Because the Trojan is running under his account, I have full domain administrator privileges, and it takes me only a few seconds to identify the domain controller that contains all the account passwords for the entire company. A hacker tool called “fgdump” allows me to dump the hashed (meaning scrambled) passwords for every user. Within a few hours, I have run the list of hashes through “rainbow tables”—a huge database of precomputed password hashes—recovering the passwords of most of the company’s employees. I eventually find one of the back-end computer servers that process customer transactions but discover the credit card numbers are encrypted. Not a problem: I find the key used to encrypt the card numbers is conveniently hidden in a stored procedure within the database on a computer known as the “SQL server,” accessible to any database administrator. Millions and millions of credit card numbers. I can make purchases all day long using a different credit card each time, and never run out of numbers.But I made no purchases. This true story is not a new replay of the hacking that landed me in a lot of hot water. Instead it was something I was hired to do. It’s what we call a “pen test,” short for “penetration test,” and it’s a large part of what my life consists of these days. I have hacked into some of the largest companies on the planet and penetrated the most resilient computer systems ever developed—hired by the companies themselves, to help them close the gaps and improve their security so they don’t become the next hacking victim. I’m largely self-taught and have spent years studying methods, tactics, and strategies used to circumvent computer security, and to learn more about how computer systems and telecommunication systems work. My passion for technology and fascination with it have taken me down a bumpy road. My hacking escapades ended up costing me over five years of my life in prison and causing my loved ones tremendous heartache. Here is my story, every detail as accurate as I can make it from memory, personal notes, public court records, documents obtained through the Freedom of Information Act, FBI wiretap and body-wire recordings, many hours of interviews, and discussions with two government informants. This is the story of how I became the world’s most wanted computer hacker.